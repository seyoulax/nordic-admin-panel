{"ast":null,"code":"var _jsxFileName = \"/home/ds/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/GitHub/nordic-admin-panel/src/components/products-list/index.js\",\n  _s = $RefreshSig$();\nimport ReactDOM from 'react-dom/client';\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './index.css';\nimport { Loader } from '../loader';\nimport productsJson from '../../stub/products.json';\nimport ProductItem from '../product-item/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProductsList(props) {\n  _s();\n  const [data, setData] = useState(null);\n  const [currentCount, setCurrentCount] = useState([]);\n  const [alwaysData, setAlwaysData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showNothingFoundErr, setShowNothingFoundErr] = useState(false);\n  const location = useLocation();\n  const newProducts = useEffect(() => {\n    setTimeout(() => {\n      setAlwaysData(productsJson);\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n  const findItem = event => {\n    event.preventDefault();\n    let title = event.target[0].value;\n    let data = alwaysData;\n    let t_f = false;\n    let array = [];\n    if (title == '') {\n      array = data;\n    } else {\n      array.push(data.find(item => item.TITLE.toLowerCase() == title.toLowerCase() || item.DISCR.toLowerCase() == title.toLowerCase()));\n      if (array[0] == undefined) {\n        array = data;\n        t_f = true;\n      }\n    }\n    setData(array);\n    setShowNothingFoundErr(t_f);\n  };\n  const delProduct = id => {\n    const data = alwaysData.filter(item => item.ID != id);\n    setAlwaysData(data);\n    setData(data);\n  };\n  const delCurrentProducts = event => {};\n  console.log(alwaysData);\n  const products = data || alwaysData;\n  console.log(products);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Find smt...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: findItem,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"\\u043D\\u0430\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => delCurrentProducts(event),\n          children: [\"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \", currentCount.length, \" \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), showNothingFoundErr ? /*#__PURE__*/_jsxDEV(\"strong\", {\n      className: \"err\",\n      children: \"\\u041D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u0431\\u044B\\u043B\\u043E \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 40\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-wrapper\",\n      children: products.map(item => /*#__PURE__*/_jsxDEV(ProductItem, {\n        data: item,\n        delProduct: delProduct,\n        currentCount: currentCount,\n        setCurrentCount: setCurrentCount\n      }, item.ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n/*class ProductsList extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            alwaysData: [],\n            data: null,\n            showNothingFoundErr: false,\n            isLoading: true\n        }\n        this.findItem = this.findItem.bind(this)\n    }\n    findItem(event){\n        event.preventDefault()\n        let title = event.target[0].value\n        let data = this.state.alwaysData\n        let t_f = false\n        let array = []\n        if(title == ''){\n            array = data\n        } else {\n            array.push(data.find(item => \n                item.TITLE.toLowerCase() == title.toLowerCase() || item.DISCR.toLowerCase() == title.toLowerCase()\n            ))\n            if(array[0] == undefined){\n                array = data\n                t_f = true\n            } \n        }\n        this.setState({\n            data : array,\n            showNothingFoundErr: t_f\n        })        \n    }\n    delProduct(id, context){\n        console.log(context)\n        const data = context.state.data.filter((item) => \n            item.ID != id\n        )\n        context.setState({\n            data: data,\n            alwaysData: data\n        })\n    }\n    _destroy(){\n        ReactDOM.unmount(\n            document.getElementById('root')\n        )\n    }\n    // * устаревшие, но ипользуются до сих пор\n        // componentWillMount(){\n        // }\n        // componentWillUpdate(){\n\n        // }\n    // *\n    componentDidMount(){\n        setTimeout(() => {\n            this.setState({\n                alwaysData: productsJson,\n                isLoading: false \n            })\n        }, 1000);\n        \n    }\n    // componentDidUpdate(){\n        \n    // }\n    // componentDidCatch(error, errorInfo){\n\n    // }\n    render() {\n        if(!this.state.data && !this.state.alwaysData){\n            throw new Error('gg')\n        } else {\n            if(this.isLoading){\n               return (\n                    <Loader />\n               )\n            }\n            return (\n                <React.Fragment>\n                    <div>\n                        <h2>Find smt...</h2>\n                        <form onSubmit={this.findItem}>\n                            <input type=\"text\"/>\n                            <input type=\"submit\" value=\"найти\"/>\n                            <button id=\"button_delete_component\" onClick={this._destroy.bind(this)}>del component ProductsList</button>\n                        </form>\n                    </div>\n                        {this.state.showNothingFoundErr ? <strong className=\"err\">Ничего не было найдено</strong> : null }\n                    <div className=\"products-wrapper\">\n                        {\n                            \n                            this.state.data.map(item => \n                                <ProductItem key={item.ID} data={item} delProduct={this.delProduct} productsListContext={this}/>\n                            )\n                        }\n                    </div>\n                </React.Fragment>\n            )\n        }\n    }\n};*/\n_s(ProductsList, \"9Xb1qgNlSeesL6DkNX656M/DDAk=\", false, function () {\n  return [useLocation];\n});\n_c = ProductsList;\nvar _c;\n$RefreshReg$(_c, \"ProductsList\");","map":{"version":3,"names":["ReactDOM","React","useState","useEffect","useLocation","Loader","productsJson","ProductItem","ProductsList","props","data","setData","currentCount","setCurrentCount","alwaysData","setAlwaysData","isLoading","setIsLoading","showNothingFoundErr","setShowNothingFoundErr","location","newProducts","setTimeout","findItem","event","preventDefault","title","target","value","t_f","array","push","find","item","TITLE","toLowerCase","DISCR","undefined","delProduct","id","filter","ID","delCurrentProducts","console","log","products","length","map"],"sources":["/home/ds/Рабочий стол/GitHub/nordic-admin-panel/src/components/products-list/index.js"],"sourcesContent":["import ReactDOM from 'react-dom/client';\nimport React, {useState, useEffect} from 'react'\nimport { useLocation } from 'react-router-dom';\n\n\nimport './index.css'\n\nimport {Loader} from '../loader'\n\nimport productsJson from '../../stub/products.json'\n\nimport ProductItem from '../product-item/index'\n\n\nexport function ProductsList(props) {\n    const [data, setData] = useState(null)\n    const [currentCount, setCurrentCount] = useState([])\n    const [alwaysData, setAlwaysData] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n    const [showNothingFoundErr, setShowNothingFoundErr] = useState(false)\n\n    const location = useLocation()\n    const newProducts = \n    useEffect(() => {\n        setTimeout(() => {\n            setAlwaysData(productsJson)\n            setIsLoading(false)\n        }, 1000)\n    }, [])\n    const findItem = (event) => {\n        event.preventDefault()\n        let title = event.target[0].value\n        let data = alwaysData\n        let t_f = false\n        let array = []\n        if(title == ''){\n            array = data\n        } else {\n            array.push(data.find(item => \n                item.TITLE.toLowerCase() == title.toLowerCase() || item.DISCR.toLowerCase() == title.toLowerCase()\n            ))\n            if(array[0] == undefined){\n                array = data\n                t_f = true\n            } \n        }\n        setData(array)\n        setShowNothingFoundErr(t_f)\n    }   \n    const delProduct = (id) => {\n        const data = alwaysData.filter((item) => \n            item.ID != id\n        )\n        setAlwaysData(data)\n        setData(data)\n    }\n    const delCurrentProducts = (event) => {\n\n    }\n    console.log(alwaysData)\n    const products = data || alwaysData\n    console.log(products)\n    if(isLoading){\n        return (\n            <Loader />\n        )\n    }\n    return (\n        <React.Fragment>\n            <div>\n                <h2>Find smt...</h2>\n                <form onSubmit={findItem}>\n                    <input type=\"text\"/>\n                    <input type=\"submit\" value=\"найти\"/>\n                    <button onClick={(event) => delCurrentProducts(event)}>Удалить {currentCount.length} товаров</button>\n                </form>\n            </div>\n                {showNothingFoundErr ? <strong className=\"err\">Ничего не было найдено</strong> : null }\n            <div className=\"products-wrapper\">\n                {\n                    products.map(item => \n                        <ProductItem key={item.ID} data={item} delProduct={delProduct} currentCount={currentCount}  setCurrentCount={setCurrentCount}/>\n                    )\n                }\n            </div>\n        </React.Fragment>\n    )\n    \n}\n/*class ProductsList extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            alwaysData: [],\n            data: null,\n            showNothingFoundErr: false,\n            isLoading: true\n        }\n        this.findItem = this.findItem.bind(this)\n    }\n    findItem(event){\n        event.preventDefault()\n        let title = event.target[0].value\n        let data = this.state.alwaysData\n        let t_f = false\n        let array = []\n        if(title == ''){\n            array = data\n        } else {\n            array.push(data.find(item => \n                item.TITLE.toLowerCase() == title.toLowerCase() || item.DISCR.toLowerCase() == title.toLowerCase()\n            ))\n            if(array[0] == undefined){\n                array = data\n                t_f = true\n            } \n        }\n        this.setState({\n            data : array,\n            showNothingFoundErr: t_f\n        })        \n    }\n    delProduct(id, context){\n        console.log(context)\n        const data = context.state.data.filter((item) => \n            item.ID != id\n        )\n        context.setState({\n            data: data,\n            alwaysData: data\n        })\n    }\n    _destroy(){\n        ReactDOM.unmount(\n            document.getElementById('root')\n        )\n    }\n    // * устаревшие, но ипользуются до сих пор\n        // componentWillMount(){\n        // }\n        // componentWillUpdate(){\n\n        // }\n    // *\n    componentDidMount(){\n        setTimeout(() => {\n            this.setState({\n                alwaysData: productsJson,\n                isLoading: false \n            })\n        }, 1000);\n        \n    }\n    // componentDidUpdate(){\n        \n    // }\n    // componentDidCatch(error, errorInfo){\n\n    // }\n    render() {\n        if(!this.state.data && !this.state.alwaysData){\n            throw new Error('gg')\n        } else {\n            if(this.isLoading){\n               return (\n                    <Loader />\n               )\n            }\n            return (\n                <React.Fragment>\n                    <div>\n                        <h2>Find smt...</h2>\n                        <form onSubmit={this.findItem}>\n                            <input type=\"text\"/>\n                            <input type=\"submit\" value=\"найти\"/>\n                            <button id=\"button_delete_component\" onClick={this._destroy.bind(this)}>del component ProductsList</button>\n                        </form>\n                    </div>\n                        {this.state.showNothingFoundErr ? <strong className=\"err\">Ничего не было найдено</strong> : null }\n                    <div className=\"products-wrapper\">\n                        {\n                            \n                            this.state.data.map(item => \n                                <ProductItem key={item.ID} data={item} delProduct={this.delProduct} productsListContext={this}/>\n                            )\n                        }\n                    </div>\n                </React.Fragment>\n            )\n        }\n    }\n};*/\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}