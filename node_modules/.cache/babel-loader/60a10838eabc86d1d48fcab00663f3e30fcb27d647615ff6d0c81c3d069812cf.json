{"ast":null,"code":"import ReactDOM from 'react-dom/client';\nimport React, { useState } from 'react';\nimport './index.css';\nimport { Loader } from '../loader';\nimport productsJson from '../../stub/products.json';\nimport ProductItem from '../product-item/index';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProductsList(props) {\n  const [products, setProdcts] = useState;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Hello\"\n  }, void 0, false);\n}\n/*class ProductsList extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            alwaysData: [],\n            data: null,\n            showNothingFoundErr: false,\n            isLoading: true\n        }\n        this.findItem = this.findItem.bind(this)\n    }\n    findItem(event){\n        event.preventDefault()\n        let title = event.target[0].value\n        let data = this.state.alwaysData\n        let t_f = false\n        let array = []\n        if(title == ''){\n            array = data\n        } else {\n            array.push(data.find(item => \n                item.TITLE.toLowerCase() == title.toLowerCase() || item.DISCR.toLowerCase() == title.toLowerCase()\n            ))\n            if(array[0] == undefined){\n                array = data\n                t_f = true\n            } \n        }\n        this.setState({\n            data : array,\n            showNothingFoundErr: t_f\n        })        \n    }\n    delProduct(id, context){\n        console.log(context)\n        const data = context.state.data.filter((item) => \n            item.ID != id\n        )\n        context.setState({\n            data: data,\n            alwaysData: data\n        })\n    }\n    _destroy(){\n        ReactDOM.unmount(\n            document.getElementById('root')\n        )\n    }\n    // * устаревшие, но ипользуются до сих пор\n        // componentWillMount(){\n        // }\n        // componentWillUpdate(){\n\n        // }\n    // *\n    componentDidMount(){\n        setTimeout(() => {\n            this.setState({\n                alwaysData: productsJson,\n                isLoading: false \n            })\n        }, 1000);\n        \n    }\n    // componentDidUpdate(){\n        \n    // }\n    // componentDidCatch(error, errorInfo){\n\n    // }\n    render() {\n        if(!this.state.data && !this.state.alwaysData){\n            throw new Error('gg')\n        } else {\n            if(this.isLoading){\n               return (\n                    <Loader />\n               )\n            }\n            return (\n                <React.Fragment>\n                    <div>\n                        <h2>Find smt...</h2>\n                        <form onSubmit={this.findItem}>\n                            <input type=\"text\"/>\n                            <input type=\"submit\" value=\"найти\"/>\n                            <button id=\"button_delete_component\" onClick={this._destroy.bind(this)}>del component ProductsList</button>\n                        </form>\n                    </div>\n                        {this.state.showNothingFoundErr ? <strong className=\"err\">Ничего не было найдено</strong> : null }\n                    <div className=\"products-wrapper\">\n                        {\n                            \n                            this.state.data.map(item => \n                                <ProductItem key={item.ID} data={item} delProduct={this.delProduct} productsListContext={this}/>\n                            )\n                        }\n                    </div>\n                </React.Fragment>\n            )\n        }\n    }\n};*/\n_c = ProductsList;\nvar _c;\n$RefreshReg$(_c, \"ProductsList\");","map":{"version":3,"names":["ReactDOM","React","useState","Loader","productsJson","ProductItem","ProductsList","props","products","setProdcts"],"sources":["/home/ds/Рабочий стол/GitHub/nordic-admin-panel/src/components/products-list/index.js"],"sourcesContent":["import ReactDOM from 'react-dom/client';\nimport React, {useState} from 'react'\n\nimport './index.css'\n\nimport {Loader} from '../loader'\n\nimport productsJson from '../../stub/products.json'\n\nimport ProductItem from '../product-item/index'\n\n\nexport function ProductsList(props) {\n    const [products, setProdcts] = useState\n    return (\n        <>Hello</>\n    )\n}\n/*class ProductsList extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            alwaysData: [],\n            data: null,\n            showNothingFoundErr: false,\n            isLoading: true\n        }\n        this.findItem = this.findItem.bind(this)\n    }\n    findItem(event){\n        event.preventDefault()\n        let title = event.target[0].value\n        let data = this.state.alwaysData\n        let t_f = false\n        let array = []\n        if(title == ''){\n            array = data\n        } else {\n            array.push(data.find(item => \n                item.TITLE.toLowerCase() == title.toLowerCase() || item.DISCR.toLowerCase() == title.toLowerCase()\n            ))\n            if(array[0] == undefined){\n                array = data\n                t_f = true\n            } \n        }\n        this.setState({\n            data : array,\n            showNothingFoundErr: t_f\n        })        \n    }\n    delProduct(id, context){\n        console.log(context)\n        const data = context.state.data.filter((item) => \n            item.ID != id\n        )\n        context.setState({\n            data: data,\n            alwaysData: data\n        })\n    }\n    _destroy(){\n        ReactDOM.unmount(\n            document.getElementById('root')\n        )\n    }\n    // * устаревшие, но ипользуются до сих пор\n        // componentWillMount(){\n        // }\n        // componentWillUpdate(){\n\n        // }\n    // *\n    componentDidMount(){\n        setTimeout(() => {\n            this.setState({\n                alwaysData: productsJson,\n                isLoading: false \n            })\n        }, 1000);\n        \n    }\n    // componentDidUpdate(){\n        \n    // }\n    // componentDidCatch(error, errorInfo){\n\n    // }\n    render() {\n        if(!this.state.data && !this.state.alwaysData){\n            throw new Error('gg')\n        } else {\n            if(this.isLoading){\n               return (\n                    <Loader />\n               )\n            }\n            return (\n                <React.Fragment>\n                    <div>\n                        <h2>Find smt...</h2>\n                        <form onSubmit={this.findItem}>\n                            <input type=\"text\"/>\n                            <input type=\"submit\" value=\"найти\"/>\n                            <button id=\"button_delete_component\" onClick={this._destroy.bind(this)}>del component ProductsList</button>\n                        </form>\n                    </div>\n                        {this.state.showNothingFoundErr ? <strong className=\"err\">Ничего не было найдено</strong> : null }\n                    <div className=\"products-wrapper\">\n                        {\n                            \n                            this.state.data.map(item => \n                                <ProductItem key={item.ID} data={item} delProduct={this.delProduct} productsListContext={this}/>\n                            )\n                        }\n                    </div>\n                </React.Fragment>\n            )\n        }\n    }\n};*/\n\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,OAAO,aAAa;AAEpB,SAAQC,MAAM,QAAO,WAAW;AAEhC,OAAOC,YAAY,MAAM,0BAA0B;AAEnD,OAAOC,WAAW,MAAM,uBAAuB;AAAA;AAAA;AAG/C,OAAO,SAASC,YAAY,CAACC,KAAK,EAAE;EAChC,MAAM,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAGP,QAAQ;EACvC,oBACI;IAAA;EAAA,iBAAU;AAEltGA,KANgBI,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}